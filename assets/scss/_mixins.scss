/* ==========================================================================
   $MIXINS
   ========================================================================== */
@import 'global';

@mixin breakpoint($breakpoint) {
    $value: map-get($breakpoints, $breakpoint);

    @if $value != null {
        @media (min-width: $value) {
            @content;
        }
    } @else {
        @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Please make sure it is defined in `$breakpoints` map.";
    }
}

@mixin landscape {
    @media screen and (orientation: landscape) {
        @content;
    }
}

// Box styles
@mixin block-styles {
    background: #fff;

    @include breakpoint(t) {
        border-radius: 6px;
        box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.2);
    }
}

@mixin fixed-in-main($component) {
    position: fixed;
    left: 0;
    right: 0;
    display: grid;
    grid-template-columns: minmax(0, 1fr);
    grid-template-areas: '#{$component}';

    @include breakpoint(m) {
        grid-template-columns: 3.6vw minmax(0, 1fr) 3.6vw;
        grid-template-areas: '. #{$component} .';
    }

    @include breakpoint(t) {
        grid-template-columns: 1.8vw minmax(0, 2fr) minmax(0, 1fr) 1.8vw;
        grid-template-areas: '. #{$component} . .';
        grid-column-gap: 1.8vw;
    }

    @include breakpoint(d) {
        grid-template-columns: 1.8vw 250px minmax(0, 2fr) minmax(0, 1fr) 1.8vw;
        grid-template-areas: '. . #{$component} . .';
    }

    @include breakpoint(full) {
        grid-template-columns: 1fr 250px 712px 356px 1fr;
        grid-column-gap: 50px;
    }
}
